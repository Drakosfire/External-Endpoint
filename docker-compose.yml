# Do not edit this file directly. Use a 'docker-compose.override.yaml' file if you can.
# Refer to `docker-compose.override.yaml.example' for some sample configurations.
# 
# TEMPORARY: This file has been modified for testing the mcp-web-ui refactor.
# The mcp-web-ui package is mounted from ../mcp-web-ui for local testing.
# Remember to revert these changes before committing!

services:
  api:
    container_name: LibreChat
    ports:
      - "${PORT}:${PORT}"
      - "127.0.0.1:3081:3081"
      # Ephemeral web UI ports - only publish when needed (no pre-mapping)
      
    depends_on:
      mongodb:
        condition: service_healthy
      rag_api:
        condition: service_started
    build:
      context: .
      dockerfile: Dockerfile
    # image: ghcr.io/danny-avila/librechat-dev:latest
    restart: always
    user: "${UID}:${GID}"
    extra_hosts:
      - "host.docker.internal:host-gateway"
    command: ["sh", "/app/entrypoint.sh"]
    environment:
      - HOST=0.0.0.0
      - MONGO_URI=mongodb://librechat_user:${MONGO_PASSWORD}@mongodb:27017/LibreChat?authSource=LibreChat
      - MEILI_HOST=http://meilisearch:7700
      - RAG_PORT=${RAG_PORT:-8000}
      - RAG_API_URL=http://rag_api:${RAG_PORT:-8000}
      # MCP Storage Configuration - Inherited by MCP servers
      - MCP_STORAGE_TYPE=mongodb
      - MCP_USER_BASED=true
      # MCP Web UI Port Range Configuration
      - MCP_WEB_UI_PORT_MIN=12000
      - MCP_WEB_UI_PORT_MAX=13000
      # MCP Web UI Configuration - Block specific ports (like Ollama on 11434)
      - MCP_WEB_UI_BLOCKED_PORTS=11434
    env_file:
      - .env
      - ../Sizzek/config/.env.sizzek
    volumes:
      - type: bind
        source: ./.env
        target: /app/.env
      - ./images:/app/client/public/images
      - ./uploads:/app/uploads
      - ./logs:/app/api/logs
      # MCP Server mounts - writable to allow dependency installation and building
      - ../Sizzek/mcp-servers:/app/mcp-servers
      # MCP Server environment file (mount both for compatibility)
      - ../Sizzek/config/.env.sizzek:/app/.env.sizzek:ro
      # mcp-web-ui is installed as a proper npm package dependency
      # MCP Server data directory - no longer needed (using MongoDB)
      # - mcp_data:/app/mcp-data
      # LibreChat configuration
      - ./librechat.yaml:/app/librechat.yaml:ro
      # Entrypoint script
      # MCP Server wrapper script
  mongodb:
    container_name: chat-mongodb
    image: mongo
    restart: always
    user: "999:999"
    ports:
      - "127.0.0.1:27017:27017"  # ⚠️ SECURE: Only localhost can access MongoDB
    volumes:
      - mongodb_data:/data/db
      - ./mongodb/init-scripts:/docker-entrypoint-initdb.d:ro
    environment:
      - MONGO_INITDB_DATABASE=LibreChat
      - MONGO_PASSWORD=${MONGO_PASSWORD}
    env_file:
      - .env
    command: mongod --noauth
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
  meilisearch:
    container_name: chat-meilisearch
    image: getmeili/meilisearch:v1.12.3
    restart: always
    user: "${UID}:${GID}"
    environment:
      - MEILI_HOST=http://meilisearch:7700
      - MEILI_NO_ANALYTICS=true
      - MEILI_MASTER_KEY=${MEILI_MASTER_KEY}
    volumes:
      - ./meili_data_v1.12:/meili_data
    security_opt:
      - no-new-privileges:true
    # ports:  # Uncomment only for debugging
    #   - "127.0.0.1:7700:7700"
  vectordb:
    container_name: vectordb
    image: pgvector/pgvector:0.8.0-pg15-trixie
    environment:
      POSTGRES_DB: mydatabase
      POSTGRES_USER: myuser
      POSTGRES_PASSWORD: mypassword
    restart: always
    volumes:
      - pgdata2:/var/lib/postgresql/data
  rag_api:
    container_name: rag_api
    image: ghcr.io/danny-avila/librechat-rag-api-dev-lite:latest
    environment:
      - DB_HOST=vectordb
      - RAG_PORT=${RAG_PORT:-8000}
    restart: always
    depends_on:
      - vectordb
    env_file:
      - .env

  # SMS HTTP Server - Handles Twilio webhooks for LibreChat SMS integration
  sms-server:
    container_name: sms-server
    build:
      context: .
      dockerfile: Dockerfile
    restart: always
    user: "${UID}:${GID}"
    depends_on:
      - api  # SMS server needs LibreChat to be running
    networks:
      - default
    command: ["node", "/app/mcp-servers/twilio-sms/dist/sms-server.js"]
    environment:
      - NODE_ENV=production
      - SMS_PORT=3081
      # Inherit environment from LibreChat
      - MONGO_URI=mongodb://librechat_user:${MONGO_PASSWORD}@mongodb:27017/LibreChat?authSource=LibreChat
    env_file:
      - .env
      - ../Sizzek/config/.env.sizzek
    volumes:
      - type: bind
        source: ../Sizzek/mcp-servers
        target: /app/mcp-servers
        read_only: true
      - type: bind
        source: ../Sizzek/config/.env.sizzek
        target: /app/.env.sizzek
        read_only: true

volumes:
  pgdata2:
  mongodb_data:
  # mcp_data:  # No longer needed (using MongoDB)
